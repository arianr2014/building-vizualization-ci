{"version":3,"sources":["reducers/index.js","constants/action-types.js","store/index.js","components/Header.js","config.js","components/Map.js","components/RasterLayers.js","actions/index.js","components/VectorLayers.js","App.js","index.js"],"names":["initialState","rasterLayer","vectorLayer","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","assign","payload","store","createStore","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","AppBar_default","position","style","backgroundColor","color","Toolbar_default","IconButton_default","className","aria-label","Menu_default","Typography_default","variant","mapConfig","rasterLayers","id","name","source","active","vectorLayers","mapboxgl","accessToken","ConnectedMap","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadVectorLayers","_loop","i","layer","that","assertThisInitialized","axios","get","then","response","map","addSource","data","addLayer","layout","paint","fill-color","fill-opacity","line-join","line-cap","line-color","line-width","setLayoutProperty","loadRasterLayers","tiles","tileSize","lng","lat","zoom","_this2","_this$state","Map","container","mapContainer","center","on","_this$props","bbox","turf","getSource","_options","fitBounds","_this3","ref","el","React","Component","connect","propTypes","PropTypes","object","ConnectedMenuRasterLayers","layerSelectedActive","layersToUpdate","setState","selectRasterLayer","layerSelectedDeactivate","renderLayerMenu","href","key","onClick","MenuRasterLayers","dispatch","rasterLayerSelected","ConnectedMenuVectorLayers","selectVectorLayer","MenuVectorLayers","vectorLayerSelected","App","feature","lib","fluid","Header","xs","md","ListSubheader_default","Divider_default","VectorLayers","RasterLayers","components_Map","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c12a249e.chunk.js","sourcesContent":["import { SELECT_RASTER, SELECT_VECTOR } from '../constants/action-types';\n//Initial state\nconst initialState = {\n  rasterLayer: {},\n  vectorLayer: {}\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RASTER:\n      return { ...state, rasterLayer: Object.assign({}, action.payload)};\n    case SELECT_VECTOR:\n      return { ...state, vectorLayer: Object.assign({}, action.payload) };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n","export const SELECT_RASTER = 'SELECT_RASTER';\nexport const SELECT_VECTOR = 'SELECT_VECTOR';","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\nconst store = createStore(\n    rootReducer /* preloadedState, */\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n    root: {\n      flexGrow: 1,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nfunction ButtonAppBar(props) {\n    const { classes } = props;\n    return (\n        <AppBar position=\"static\" style={{ backgroundColor: 'rgba(0,0,0,0.8)', color: 'white' }}>\n            <Toolbar>\n                <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Building visualization - CS Inc.\n          </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n\n","export const mapConfig = {\n    accessToken: 'pk.eyJ1IjoiZGV2c2VlZCIsImEiOiJnUi1mbkVvIn0.018aLhX0Mb0tdtaT2QNe2Q',\n    style: 'mapbox://styles/devseed/cjlp9k7nr7ij02rlgerg2e8r2',\n};\nexport const rasterLayers = [\n    {\n        id: 'esri-world-imagery',\n        name: 'Esri World Imagery',\n        source: 'https://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        active: true\n    }\n];\n\nexport const vectorLayers = [\n    {\n        id: 'Area-1',\n        name: 'Area 1',\n        source: 'https://s3.amazonaws.com/ds-data-projects/courage-services-inc/danny-p.geojson',\n        active: true\n    },\n    {\n        id: 'Area-2',\n        name: 'Area 2',\n        source: 'https://s3.amazonaws.com/ds-data-projects/courage-services-inc/karito-p.geojson',\n        active: true\n    },\n    {\n        id: 'Area-3',\n        name: 'Area 3',\n        source: 'https://s3.amazonaws.com/ds-data-projects/courage-services-inc/edith-p.geojson',\n        active: true\n    },   {\n        id: 'Area-4',\n        name: 'Area 4',\n        source: 'https://s3.amazonaws.com/ds-data-projects/courage-services-inc/richman-p.geojson',\n        active: true\n    },\n    {\n        id: 'Area-5',\n        name: 'Area 5',\n        source: 'https://s3.amazonaws.com/ds-data-projects/courage-services-inc/pilar-p.geojson',\n        active: true\n    }\n];\n\n\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as turf from '@turf/turf'\nimport _ from 'underscore';\nimport { mapConfig } from './../config';\nimport { rasterLayers, vectorLayers } from './../config';\nmapboxgl.accessToken = mapConfig.accessToken;\n\nclass ConnectedMap extends React.Component {\n  map;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lng: 44.4237,\n      lat: 33.3146,\n      zoom: 11\n    };\n  }\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    //Display map\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: mapConfig.style,\n      center: [lng, lat],\n      zoom\n    });\n\n    //Load the data\n    this.map.on('load', () => {\n      this.loadRasterLayers();\n      this.loadVectorLayers();\n    });\n  }\n\n  loadVectorLayers = () => {\n    for (let i = 0; i < vectorLayers.length; i++) {\n      const layer = vectorLayers[i];\n      const that = this;\n      axios.get(layer.source)\n        .then(function (response) {\n          that.map.addSource(layer.id, {\n            type: 'geojson',\n            data: response.data\n          });\n          that.map.addLayer({\n            'id': layer.id,\n            'type': 'fill',\n            'source': layer.id,\n            'layout': {},\n            'paint': {\n              'fill-color': '#f9f024',\n              'fill-opacity': 0.1\n            }\n          });\n          that.map.addLayer({\n            \"id\": layer.id + '-l',\n            \"type\": \"line\",\n            \"source\": layer.id,\n            \"layout\": {\n              \"line-join\": \"round\",\n              \"line-cap\": \"round\"\n            },\n            \"paint\": {\n              \"line-color\": \"#f9f024\",\n              \"line-width\": 1\n            }\n          });\n          if (!layer.active) {\n            that.map.setLayoutProperty(layer.id, 'visibility', 'none');\n            that.map.setLayoutProperty(layer.id + '-l', 'visibility', 'none');            \n          }\n        });\n    }\n  }\n\n  loadRasterLayers = () => {\n    for (let i = 0; i < rasterLayers.length; i++) {\n      const layer = rasterLayers[i];\n      this.map.addLayer(\n        {\n          id: layer.id,\n          type: 'raster',\n          source: {\n            type: 'raster',\n            tiles: [layer.source],\n            tileSize: 256\n          },\n          paint: {}\n        }\n      );\n      if (!layer.active) {\n        this.map.setLayoutProperty(layer.id, 'visibility', 'none');\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    const { rasterLayer, vectorLayer } = this.props;\n    if (rasterLayer && rasterLayer.id) {\n      this.map.setLayoutProperty(rasterLayer.id, 'visibility', rasterLayer.active ? 'visible' : 'none');\n    }\n    if (vectorLayer && vectorLayer.id) {\n       var bbox = turf.bbox(this.map.getSource(vectorLayer.id)._options.data);\n       this.map.fitBounds(bbox);\n      this.map.setLayoutProperty(vectorLayer.id, 'visibility', vectorLayer.active ? 'visible' : 'none');\n      this.map.setLayoutProperty(vectorLayer.id + '-l', 'visibility', vectorLayer.active ? 'visible' : 'none');\n\n    }\n  }\n  render() {\n    return <div ref={el => (this.mapContainer = el)} className=\"mapContent\" />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    rasterLayer: state.rasterLayer,\n    vectorLayer: state.vectorLayer\n  };\n};\n\nconst Map = connect(mapStateToProps)(ConnectedMap);\n\nMap.propTypes = {\n  rasterLayer: PropTypes.object,\n  vectorLayer: PropTypes.object\n};\n\nexport default Map;\n","import React, { Component } from 'react';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { rasterLayers } from './../config';\nimport { selectRasterLayer } from '../actions/index';\n\n\nclass ConnectedMenuRasterLayers extends Component {\n  constructor(props: Props) {\n    super(props);\n    this.state = rasterLayers;\n  }\n\n  layerSelectedActive = rasterLayer => {\n    rasterLayer.active = true;\n    // this.updateMenuLayers(rasterLayer)\n    const layersToUpdate = {};\n    layersToUpdate[rasterLayer.id] = rasterLayer;\n    this.setState(Object.assign(this.state, layersToUpdate));\n    this.props.selectRasterLayer(rasterLayer);\n  };\n\n  layerSelectedDeactivate = rasterLayer => {\n    rasterLayer.active = false;\n    // this.updateMenuLayers(rasterLayer)\n    const layersToUpdate = {};\n    layersToUpdate[rasterLayer.id] = rasterLayer;\n    this.setState(Object.assign(this.state, layersToUpdate));\n    this.props.selectRasterLayer(rasterLayer);\n  };\n\n  renderLayerMenu = () => {\n    const menuList = () =>\n      rasterLayers.map(\n        rasterLayer =>\n          rasterLayer.active ? (\n            <a href=\"#\" key={rasterLayer.id} className=\"active\" onClick={() => this.layerSelectedDeactivate(rasterLayer)}>\n              {' '}\n              {rasterLayer.name}\n            </a>\n          ) : (\n              <a href=\"#\" key={rasterLayer.id} onClick={() => this.layerSelectedActive(rasterLayer)}>\n                {' '}\n                {rasterLayer.name}\n              </a>\n            )\n      );\n    return <div>{menuList()}</div>;\n  };\n\n  render() {\n    return <nav id=\"menu\">{this.renderLayerMenu()}</nav>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectRasterLayer: rasterLayerSelected => dispatch(selectRasterLayer(rasterLayerSelected))\n  };\n};\n\n\nconst MenuRasterLayers = connect(\n  null,\n  mapDispatchToProps\n)(ConnectedMenuRasterLayers);\nexport default MenuRasterLayers;\n","import { SELECT_RASTER, SELECT_VECTOR } from '../constants/action-types';\n\nexport const selectRasterLayer = rasterLayer => ({\n  type: SELECT_RASTER,\n  payload: rasterLayer\n});\n\nexport const selectVectorLayer = vectorLayer => ({\n  type: SELECT_VECTOR,\n  payload: vectorLayer\n});\n","import React, { Component } from 'react';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { vectorLayers } from './../config';\nimport { selectVectorLayer } from '../actions/index';\n\n\nclass ConnectedMenuVectorLayers extends Component {\n  constructor(props: Props) {\n    super(props);\n    this.state = vectorLayers;\n  }\n\n  layerSelectedActive = vectorLayer => {\n    vectorLayer.active = true;\n    // this.updateMenuLayers(vectorLayer)\n    const layersToUpdate = {};\n    layersToUpdate[vectorLayer.id] = vectorLayer;\n    this.setState(Object.assign(this.state, layersToUpdate));\n    this.props.selectVectorLayer(vectorLayer);\n  };\n\n  layerSelectedDeactivate = vectorLayer => {\n    vectorLayer.active = false;\n    // this.updateMenuLayers(vectorLayer)\n    const layersToUpdate = {};\n    layersToUpdate[vectorLayer.id] = vectorLayer;\n    this.setState(Object.assign(this.state, layersToUpdate));\n    this.props.selectVectorLayer(vectorLayer);\n  };\n\n  renderLayerMenu = () => {\n    const menuList = () =>\n      vectorLayers.map(\n        vectorLayer =>\n          vectorLayer.active ? (\n            <a href=\"#\" key={vectorLayer.id} className=\"active\" onClick={() => this.layerSelectedDeactivate(vectorLayer)}>\n              {' '}\n              {vectorLayer.name}\n            </a>\n          ) : (\n              <a href=\"#\" key={vectorLayer.id} onClick={() => this.layerSelectedActive(vectorLayer)}>\n                {' '}\n                {vectorLayer.name}\n              </a>\n            )\n      );\n    return <div>{menuList()}</div>;\n  };\n\n  render() {\n    return <nav id=\"menu\">{this.renderLayerMenu()}</nav>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectVectorLayer: vectorLayerSelected => dispatch(selectVectorLayer(vectorLayerSelected))\n  };\n};\n\n\nconst MenuVectorLayers = connect(\n  null,\n  mapDispatchToProps\n)(ConnectedMenuVectorLayers);\nexport default MenuVectorLayers;\n","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Header from './components/Header'\nimport Map from './components/Map';\nimport RasterLayers from './components/RasterLayers';\nimport VectorLayers from './components/VectorLayers'\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      feature: null\n    };\n  }\n  render() {\n    return (\n      <Grid fluid>\n        <Row>\n          <Header></Header>\n        </Row>\n        <Row>\n          <Col xs={12} md={2}>\n            <ListSubheader>Vector Layers</ListSubheader>\n            <Divider />\n            <VectorLayers></VectorLayers>\n            <ListSubheader>Raster Layers</ListSubheader>\n            <Divider />\n            <RasterLayers></RasterLayers>\n          </Col>\n          <Col xs={12} md={10}>\n            <div className='mapContent'>\n              <Map></Map>\n            </div>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\n// Set the Redux provider in the top of the app.\n\n"],"sourceRoot":""}